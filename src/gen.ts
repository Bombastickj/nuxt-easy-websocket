import { genDynamicImport, genImport } from 'knitwork'
import { addTemplate, addTypeTemplate } from '@nuxt/kit'
import { camelCase } from 'scule'
import type { Nuxt } from '@nuxt/schema'
import type { NuxtEasyWebSocketContext } from './types'

export function generateRouteTypes(
  { clientRoutes, serverRoutes }: NuxtEasyWebSocketContext,
  nuxt: Nuxt,
) {
  const generatedTemplate = `/**
* This file is auto-generated by nuxt-easy-websocket module.
* Do not edit this file manually.
*/
declare module '#nuxt-easy-websocket/routes' {
  interface EasyWSClientRoutes {
    ${clientRoutes['default'].map(route => `'${route.routePath}': Parameters<typeof ${genDynamicImport(route.filePath, { wrapper: false, singleQuotes: true })}.default>[0]['data']`).join('\n    ')}
  }
  interface EasyWSServerRoutes {
    ${serverRoutes.map(route => `'${route.routePath}': Parameters<typeof ${genDynamicImport(route.filePath, { wrapper: false, singleQuotes: true })}.default>[0]['data']`).join('\n    ')}
  }
  interface EasyWSExternalRoutes {
    ${Object.keys(clientRoutes).filter(key => key !== 'default').map(key => `'${key}': { }`).join('\n    ')}
  }
}
`
  // Add the generated types to the Nuxt build
  const { dst } = addTypeTemplate({
    filename: 'types/nuxt-easy-websocket-routes.d.ts',
    getContents: () => generatedTemplate,
    write: true,
  }, { nitro: true, nuxt: true })
  // Make the generated template available to the server handler
  nuxt.options.alias['#nuxt-easy-websocket/routes'] = dst
}
